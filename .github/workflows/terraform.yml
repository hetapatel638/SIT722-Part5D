# 
# GitHub Actions workflow.
#
# Automatically deploys the python microservice to Kubernetes on push to any branch. 
# For real use you might want to restrict this to the "prod" branch.
#

name: Terraform integration

on:
  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      # Azure login using Service Principal credentials from GitHub Secrets
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Run az cli commands
      - name: List Azure Resource Groups
        run: az group list

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: scripts/terraform

      # # This allows the workflow to continue even if the resource is already imported.
      - name: Terraform Import Resource Group
        run: terraform import azurerm_resource_group.sit722part5d /subscriptions/0dfabf97-c1bc-4f2c-bcc7-b1c9876c738a/resourceGroups/sit722part5d
        continue-on-error: true  
        
      # Run Terraform plan
      - name: Terraform Plan
        run: terraform plan
        working-directory: scripts/terraform

      # Optionally, apply Terraform changes (use cautiously in production!)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: scripts/terraform
