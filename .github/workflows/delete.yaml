# 
# GitHub Actions workflow.
#
# Automatically deploys the python microservice to Kubernetes on push to any branch. 
# For real use you might want to restrict this to the "prod" branch.
#

name: Delete microservice

on:
  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      # Azure login using Service Principal credentials from GitHub Secrets 
      - name: Azure login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      #
      # Give execute permissions for the delete script.
      #
      - name: Permission Delete
        run: chmod +x scripts/delete.sh

      # Get AKS credentials
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ vars.AZURE_RESOURCE_NAME }} --name ${{ vars.APP_NAME }} 

      #
      # Installs Kubectl and connects it to the cluster.
      #
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      #
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: "v${{ vars.AZURE_AKS_VERSION }}"
          
      #
      # Expands the configuration template and deletes the microservice.
      #
      - name: Delete
        run: scripts/delete.sh
